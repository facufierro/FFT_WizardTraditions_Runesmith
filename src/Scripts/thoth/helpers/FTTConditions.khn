function FFT_HasRunicWeapon(entity, mainHand)
    local entity = entity or context.Source
    local weaponEntity = GetActiveWeapon(entity, true)
    if weaponEntity.IsValid then
        result = Character(entity) & HasStatus('FFT_RUNIC_WEAPON', weaponEntity)
        return ConditionResult(result.Result, { ConditionError("HasNotRunicWeapon") },
            { ConditionError("HasRunicWeapon") })
    end
    return ConditionResult(false, { ConditionError("HasNotRunicWeapon") }, { ConditionError("HasRunicWeapon") })
end

function FFT_HasAnyExtraAttack(entity)
    local entity = entity or context.Target
    local result = HasAnyStatus(
        { 'EXTRA_ATTACK', 'EXTRA_ATTACK_2', 'EXTRA_ATTACK_WAR_MAGIC', 'EXTRA_ATTACK_WAR_PRIEST', 'MAG_MARTIAL_EXERTION',
            'WILDSTRIKE_EXTRA_ATTACK', 'WILDSTRIKE_2_EXTRA_ATTACK', 'STALKERS_FLURRY', 'EXTRA_ATTACK_THIRSTING_BLADE',
            'FFT_EXTRA_ATTACK_RUNIC_EMPOWERMENT', 'COMMANDERS_STRIKE_D10', 'COMMANDERS_STRIKE_D8' }, {}, {}, entity,
        context.Source, false).Result
    return ConditionResult(result)
end

function FFT_HasHigherPriorityExtraAttackQueued(status, entity)
    local entity = entity or context.Target
    local eaQueuedStatuses = { 'EXTRA_ATTACK_2_Q'
    , 'EXTRA_ATTACK_Q'
    , 'EXTRA_ATTACK_WAR_MAGIC_Q'
    , 'EXTRA_ATTACK_WAR_PRIEST_Q'
    , 'MAG_MARTIAL_EXERTION_Q'
    , 'WILDSTRIKE_EXTRA_ATTACK_Q'
    , 'STALKERS_FLURRY_Q'
    , 'EXTRA_ATTACK_THIRSTING_BLADE_Q'
    , 'FFT_EXTRA_ATTACK_RUNIC_EMPOWERMENT_Q'
    , 'COMMANDERS_STRIKE_Q_D10'
    , 'COMMANDERS_STRIKE_Q_D8'
    , 'WILDSTRIKE_2_EXTRA_ATTACK_Q'
    }
    for i, v in ipairs(eaQueuedStatuses) do
        if (v == status) then
            return ConditionResult(false)
        end
        if HasStatus(v, entity, context.Source, false).Result then
            return ConditionResult(true)
        end
    end

    return ConditionResult(false)
end
